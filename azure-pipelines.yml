# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
      - main
      

variables:
  - name: containerRegistry
    value: falcon-container-registry
  - name: imageRepository
    value: trifork/falcon-azure-devops-exporter
  - name: sourceBranchName
    value: ${{split(variables['Build.SourceBranch'], '/')[2]}}

name: ${{variables.sourceBranchName}}-$(SourceBranchName)-build-$(Build.BuildId)

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: azure_devops_exporter
        steps:
          - task: Docker@2
            displayName: Login to DockerHub
            inputs:
              command: login
              containerRegistry: ${{ variables.containerRegistry }}

          - task: Docker@2
            displayName: Build an image
            inputs:
              containerRegistry: ${{ variables.containerRegistry }}
              repository: ${{ variables.imageRepository }}
              tags: |
                latest
                build-$(Build.BuildId)
                $(Build.BuildNumber)
                ${{ variables.sourceBranchName }}-build-$(Build.BuildId)
                $(Build.SourceVersion)
              command: build
              Dockerfile: Dockerfile
              buildContext: .
            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

          - task: Docker@2
            displayName: Push image to DockerHub
            inputs:
              containerRegistry: ${{ variables.containerRegistry }}
              repository: ${{ variables.imageRepository }}
              command: push
              tags: |
                latest
                build-$(Build.BuildId)
                $(Build.BuildNumber)
                ${{ variables.sourceBranchName }}-build-$(Build.BuildId)
                $(Build.SourceVersion)
            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
